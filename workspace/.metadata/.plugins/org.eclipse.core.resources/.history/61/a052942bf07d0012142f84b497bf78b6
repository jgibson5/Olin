package net.joegibson.huffman;

public class Node implements Comparable<Node>{
	private String character;
	private int freq;
	private Node leftChild;
	private Node rightChild;
	
	public Node() {
		this.character = null;
		this.leftChild = null;
		this.rightChild = null;
	}
	
	public Node(String c, int freq) {
		this.character = c;
		this.freq = freq;
	}
	
	public Node(Node n1, Node n2) {
		this.character = null;
		this.freq = n1.getFreq() + n2.getFreq();
		this.leftChild = n1;
		this.rightChild = n2;
	}
	
	/**
	 * @return the character
	 */
	public String getCharacter() {
		return character;
	}
	public Node getLeftChild() {
		return leftChild;
	}

	public void setLeftChild(Node leftChild) {
		this.leftChild = leftChild;
	}

	public Node getRightChild() {
		return rightChild;
	}

	public void setRightChild(Node rightChild) {
		this.rightChild = rightChild;
	}

	/**
	 * @param character the character to set
	 */
	public void setCharacter(String character) {
		this.character = character;
	}
	/**
	 * @return the freq
	 */
	public int getFreq() {
		return freq;
	}
	/**
	 * @param freq the freq to set
	 */
	public void setFreq(int freq) {
		this.freq = freq;
	}
	
	public int compareTo(Node that) {
		return this.freq - that.getFreq();
	}
	
	public String toString() {
		return "(" + this.character + ", " + this.freq + ", " + this.leftChild + ", " + this.rightChild +")";
	}
	
	
}
