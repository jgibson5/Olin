/**
 * 
 */
package net.joegibson.huffman;

import java.util.HashMap;
import java.util.PriorityQueue;

/**
 * @author jgibson
 *
 */
public class HuffmanTree{
	public Node bigTree;
	
	public String Encode(String string){
		return null;
	}
	
	public String Decode(String binary){
		return null;
	}
	
	public void construct(Histogram h, String filePath){
		h.readTest(filePath);
		while (h.getPriorityQueue().size() >1){
			Node childNode1 = h.poll();
			Node childNode2 = h.poll();
			Node parent = new Node(childNode1, childNode2);
			h.addToQueue(parent);
		}
		bigTree = h.poll();
		
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		

	}

}
